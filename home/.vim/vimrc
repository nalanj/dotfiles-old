call plug#begin()

Plug 'altercation/vim-colors-solarized'
Plug 'jlanzarotta/bufexplorer'
Plug 'itchyny/lightline.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-surround'
Plug 'fatih/vim-go'
Plug 'jremmen/vim-ripgrep'
Plug 'cohama/lexima.vim'
call plug#end()

set nocompatible
filetype off
filetype plugin indent on
set fileformat=unix
set fileformats=unix,dos

set autoindent
set smartindent

set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

set showcmd
set showmode

" use a viminfo
set viminfo='10,\"100,:100,%,n~/.viminfo

if !has('gui_running')
  set t_Co=256
  set termguicolors
endif

" resume cursor position
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

" more natural splits
set splitbelow
set splitright

" show line number
set number relativenumber

syntax enable
set background=dark
colorscheme solarized
let g:lightline = {'colorscheme': 'solarized'}

" put annoying files elsewhere
set directory=$HOME/.vim/swap
set backupdir=$HOME/.vim/swap
set undodir=$HOME/.vim/swap

if has("win32")
set directory=$HOME/vimfiles/swap
set backupdir=$HOME/vimfiles/swap
set undodir=$HOME/vimfiles/swap
endif


" set tab width stuff
set tabstop=2 shiftwidth=2
set smarttab
set expandtab
set backspace=indent,eol,start

set encoding=utf-8
set autowrite
set hidden
set laststatus=2

set ruler

" search config
set hlsearch
set ignorecase
set smartcase

" send characters more quickly
set ttyfast

" wrap options
set wrap
set textwidth=79

if has('mouse')
set mouse=a
endif

" Some gui specific settings
if has("gui_running")
  set guifont=IBM\ Plex\ Mono:h14
  set guioptions-=T
  set guioptions-=m
  set guioptions-=l
  set guioptions-=L
  set guioptions-=r
  set guioptions-=R
  set lines=999 columns=999
endif

let mapleader = ","

" Fast saving
nmap <leader>w <C-w>

" Fast close buffer
nmap <leader>q :bd<cr>

" Disable ctrl-c
imap <C-c> nop

" set 80 character line limit
set colorcolumn=80

" Set whitespace to show up selectively
set listchars=tab:\ \             " a tab should display as "  ", trailing whitespace as "."
set listchars+=trail:~            " show trailing spaces as dots
set list

" find with leader t
nmap <Leader>t :find<Space>

" buffer back and forward with leader < and leader >
nmap <leader>> :bn<cr>
nmap <leader>< :bp<cr>

" some vim-go stuff
autocmd FileType go nmap <leader>b  <Plug>(go-build)
autocmd FileType go nmap <leader>gt <Plug>(go-test)
autocmd FileType go nmap <leader>gf <Plug>(go-test-func)

let g:go_fmt_autosave = 1
let g:go_fmt_command = 'goimports'
let g:go_metalinter_autosave = 1

augroup go
 autocmd!
 autocmd Filetype go
    \  command! -bang A call go#alternate#Switch(<bang>0, 'edit')
    \| command! -bang AV call go#alternate#Switch(<bang>0, 'vsplit')
    \| command! -bang AS call go#alternate#Switch(<bang>0, 'split')
augroup END

" copy and paste
vmap <C-c> "+y
vmap <C-v> c<ESC>"+p
imap <C-v> <ESC>"+pa

" RakeImport files syntax highlight as ruby
autocmd BufNewFile,BufRead RakeImport set syntax=ruby

" vimrc files use vim syntax
autocmd BufNewFile,BufRead vimrc set syntax=vim

" set path to $PWD/** to help with searching
set path=$PWD/**

" configure netrw
let g:netrw_banner = 0
let g:netrw_liststyle = 3

" enable undo file
set undofile
